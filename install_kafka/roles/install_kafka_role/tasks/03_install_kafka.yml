- name: Add group "kafka"
  group:
    name: "{{ kafka_group }}"
    system: yes

- name: Add user "kafka"
  user:
    name: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    shell: /sbin/nologin
    system: yes

- name: Download the tarball
  get_url: url="http://{{ kafka_mirror }}/kafka/{{ kafka_version }}/kafka_{{ scala_version }}-{{ kafka_version }}.tgz" dest=/opt/kafka-{{ kafka_version }}.tgz

- name: Extract the tarball
  unarchive:
    src: /opt/kafka-{{ kafka_version }}.tgz
    dest: /opt/
    copy: no
    creates: /opt/kafka-{{ kafka_version }}

- name: Symlink install directory
  file:
    src: "/opt/kafka_{{ scala_version }}-{{ kafka_version }}"
    path: "{{ kafka_home }}"
    state: link

- name: Set permissions on Kafka installation folder
  file:
    path: "{{ kafka_home }}/"
    owner: root
    group: root
    recurse: yes

- name: Create /kafka/data directory
  file:
    path: /kafka/data
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  when: data_disks_devices is not defined or not data_disks_devices or data_disks_devices|length <= 0

- name: Create /disk/{0..n}/kafka/data directories
  file: 
    path: "/disk/{{ item.0 + 1 }}/kafka/data" 
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  with_indexed_items: "{{ data_disks_devices }}"
  when: data_disks_devices is defined and data_disks_devices

- name: Create Kafka log directory
  file:
    path: "{{ kafka_log_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"

- name: Link the log directory
  file:
    src: "{{ kafka_log_dir }}"
    path: "{{ kafka_home }}/logs"
    state: link

- name: Create Kafka conf directory
  file:
    path: "{{ kafka_conf_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0755'

- name: Install Kafka systemd unit file
  template:
    src: kafka.service.j2
    dest: /etc/systemd/system/kafka.service
    mode: '0644'
  notify: Reload systemd

- name: Configure Kafka server
  template:
    src: kafka.server.properties.j2
    dest: "{{ kafka_conf_dir }}/server.properties"
  notify: Restart kafka

- name: Upload log4j configs
  copy:
    src: "{{ item }}"
    dest: "{{ kafka_conf_dir }}/"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0644'
  with_items:
    - log4j.properties
    - tools-log4j.properties
  notify: Restart kafka

- name: Set ownership and permissions for /kafka recursively
  file:
    path: /kafka
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0755'
    recurse: yes

- name: Make sure Kafka is running
  service:
    name: kafka.service
    enabled: yes
    state: started