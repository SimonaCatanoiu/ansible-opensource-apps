- name: http_nginx | Install NGINX packages
  ansible.builtin.package:
    name: "nginx"
    state: present

- name: http_nginx | Install specific NGINX packages
  ansible.builtin.package:
    name: "php{{ php_ver }}-fpm"
    state: present
  notify:
    - Start http
    - Reload php-fpmnextcloud_websrvnextcloud_websrv

- name: http_nginx | Configure tls | Copy chained certificate file for nginx to host
  ansible.builtin.copy:
    dest: "{{ nextcloud_tls_cert_file }}"
    src: "{{ nextcloud_tls_src_cert }}"
    owner: "www-data"
    mode: "0640"

- name: http_nginx| Configure tls  | Copy key to the host
  ansible.builtin.copy:
    dest: "{{ nextcloud_tls_cert_key_file }}"
    src: "{{ nextcloud_tls_src_cert_key }}"
    owner: "www-data"
    group: "www-data"
    mode: 0400
    force: false

- name: http_nginx | Remove some commented line in php-fpm conf
  ansible.builtin.lineinfile:
    dest: "{{ php_dir }}/fpm/pool.d/www.conf"
    regexp: '^\;env'
    state: absent
  notify: Reload php-fpm

- name: http_nginx | Add path variable to php-fpm
  ansible.builtin.blockinfile:
    dest: "{{ php_dir }}/fpm/pool.d/www.conf"
    insertafter: '^; Default Value: clean env$'
    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    block: |
      env[HOSTNAME] = $HOSTNAME
      env[PATH] = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      env[TMP] = /tmp
      env[TMPDIR] = /tmp
      env[TEMP] = /tmp
  notify: Reload php-fpm

- name: http_nginx | Enable APC for php CLI
  ansible.builtin.lineinfile:
    dest: "{{ php_dir }}/cli/php.ini"
    line: "apc.enable_cli = 1"
    insertbefore: "^; End:$"
    state: present
  notify: Reload php-fpm

- name: http_nginx | Enable PHP OPcache for php.ini
  ansible.builtin.lineinfile:
    dest: "{{ php_dir }}/fpm/php.ini"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: 'opcache.enable=0', line: 'opcache.enable=1' }
    - { regexp: 'opcache.enable_cli', line: 'opcache.enable_cli=1' }
    - { regexp: 'opcache.interned_strings_buffer', line: 'opcache.interned_strings_buffer=16' }
    - { regexp: 'opcache.max_accelerated_files', line: 'opcache.max_accelerated_files=10000' }
    - { regexp: 'opcache.memory_consumption', line: 'opcache.memory_consumption=128' }
    - { regexp: 'opcache.save_comments', line: 'opcache.save_comments=1' }
    - { regexp: 'opcache.revalidate_freq', line: 'opcache.revalidate_freq=1' }
    - { regexp: 'memory_limit', line: 'memory_limit={{ php_memory_limit }}'}
  notify: Reload php-fpm

- name: http_nginx | Generate Public Diffie-Hellman parameter (This might take a while)
  ansible.builtin.command: "openssl dhparam -out {{ nextcloud_tls_dhparam }} 2048"
  args:
    creates: "{{ nextcloud_tls_dhparam }}"

- name: http_nginx | Configure php handler
  ansible.builtin.template:
    dest: /etc/nginx/sites-available/php_handler.cnf
    src: templates/nginx_php_handler.j2
    mode: 0640
  notify: Reload http

- name: http_nginx | Enable php handler
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/php_handler
    src: /etc/nginx/sites-available/php_handler.cnf
    state: link
  notify: Reload http

- name: http_nginx | Generate Nextcloud configuration for nginx
  ansible.builtin.template:
    dest: /etc/nginx/sites-available/nc_{{ nextcloud_instance_name }}.cnf
    src: "templates/nginx_nc.j2"
    mode: 0640
  notify: Reload http

- name: http_nginx | Enable Nextcloud in nginx conf
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/nc_{{ nextcloud_instance_name }}
    src: /etc/nginx/sites-available/nc_{{ nextcloud_instance_name }}.cnf
    state: link
  notify: Reload http

- name: http_nginx | Disable nginx default site
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Reload http

- name: http_nginx | Modify nginx global config
  ansible.builtin.copy:
    src: files/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
  notify: Reload http
