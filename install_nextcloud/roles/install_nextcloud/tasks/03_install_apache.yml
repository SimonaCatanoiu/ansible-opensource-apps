---
- name: http_apache | Configure tls | Copy chained certificate file for nginx to host
  ansible.builtin.copy:
    dest: "{{ nextcloud_tls_cert_file }}"
    src: "{{ nextcloud_tls_src_cert }}"
    owner: "www-data"
    mode: "0640"

- name: http_apache | Configure tls | Copy key to the host
  ansible.builtin.copy:
    dest: "{{ nextcloud_tls_cert_key_file }}"
    src: "{{ nextcloud_tls_src_cert_key }}"
    owner: "www-data"
    group: "www-data"
    mode: 0400
    force: false

- name: http_apache | Install web server packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ nextcloud_websrv }}"

- name: http_apache | Install specific Apache web server packages
  ansible.builtin.package:
    name: "libapache2-mod-php{{ php_ver }}"
  notify:
    - Start http
    - Reload php-fpm

- name: http_apache | Enable APC for php CLI
  ansible.builtin.lineinfile:
    dest: "{{ php_dir }}/cli/php.ini"
    line: "apc.enable_cli = 1"
    insertbefore: "^; End:$"
    state: present
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"

- name: http_apache | Add path variable to php-fpm
  ansible.builtin.blockinfile:
    dest: "{{ php_dir }}/fpm/pool.d/www.conf"
    insertafter: '^; Default Value: clean env$'
    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    block: |
      env[HOSTNAME] = $HOSTNAME
      env[PATH] = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      env[TMP] = /tmp
      env[TMPDIR] = /tmp
      env[TEMP] = /tmp
  notify: Reload php-fpm

- name: http_apache | Enable PHP OPcache for php.ini
  ansible.builtin.lineinfile:
    dest: "{{ php_dir }}/fpm/php.ini"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: true
  with_items:
    - {regexp: 'opcache.enable=0', line: 'opcache.enable=1'}
    - {regexp: 'opcache.enable_cli', line: 'opcache.enable_cli=1'}
    - {regexp: 'opcache.interned_strings_buffer', line: 'opcache.interned_strings_buffer=16'}
    - {regexp: 'opcache.max_accelerated_files', line: 'opcache.max_accelerated_files=10000'}
    - {regexp: 'opcache.memory_consumption', line: 'opcache.memory_consumption=128'}
    - {regexp: 'opcache.save_comments', line: 'opcache.save_comments=1'}
    - {regexp: 'opcache.revalidate_freq', line: 'opcache.revalidate_freq=1'}
    - {regexp: 'memory_limit', line: 'memory_limit={{ php_memory_limit }}'}
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: Reload http

- name: http_apache | Enable PHP OPcache for php.ini
  ansible.builtin.lineinfile:
    dest: "{{ php_dir }}/apache2/php.ini"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: true
  with_items:
    - {regexp: 'opcache.enable=0', line: 'opcache.enable=1'}
    - {regexp: 'opcache.enable_cli', line: 'opcache.enable_cli=1'}
    - {regexp: 'opcache.interned_strings_buffer', line: 'opcache.interned_strings_buffer=16'}
    - {regexp: 'opcache.max_accelerated_files', line: 'opcache.max_accelerated_files=10000'}
    - {regexp: 'opcache.memory_consumption', line: 'opcache.memory_consumption=128'}
    - {regexp: 'opcache.save_comments', line: 'opcache.save_comments=1'}
    - {regexp: 'opcache.revalidate_freq', line: 'opcache.revalidate_freq=1'}
    - {regexp: 'memory_limit', line: 'memory_limit={{ php_memory_limit }}'}
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: Reload http

- name: http_apache | Enable required Apache2 modules
  community.general.apache2_module:
    name: "{{ item }}"
    state: present
  with_items:
    - rewrite
    - headers
    - env
    - dir
    - mime
  notify: Restart http

- name: http_apache | Enable ssl Apache2 module
  community.general.apache2_module:
    state: present
    name: "{{ item }}"
  with_items:
    - ssl
  when: (nextcloud_install_tls | bool)
  notify: Restart http

- name: http_apache | Generate Nextcloud configuration for apache
  ansible.builtin.template:
    dest: /etc/apache2/sites-available/nc_{{ nextcloud_instance_name }}.conf
    src: "templates/apache2_nc.j2"
    mode: 0640
  notify: Reload http

- name: http_apache | Enable Nextcloud site in apache conf
  ansible.builtin.file:
    path: /etc/apache2/sites-enabled/nc_{{ nextcloud_instance_name }}.conf
    src: /etc/apache2/sites-available/nc_{{ nextcloud_instance_name }}.conf
    state: link
  notify: Reload http

- name: http_apache | Disable apache default site
  ansible.builtin.file:
    path: /etc/apache2/sites-enabled/000-default.conf
    state: absent
  notify: Reload http